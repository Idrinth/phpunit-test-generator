<?php

namespace {{config.namespace}};

use {{config.testcase}} as TestCaseImplementation;
use {{class.namespace}}\{{class.name}};

/**
 * this is an automatically generated skeleton for testing {{class.name}}
 * @todo actually test
 **/
class {{class.name}}Test extends TestCaseImplementation
{
{% for function in class.methods %}

    /**
     * @test
     * @todo replace with actual tests
     **/
    public function test{{function.name|toUpperCamelCase}} ()
    {
        $instance = new {{class.name}}{% include 'function.twig' with {'function': class.constructor} only %};
    {% if function.return != 'mixed' %}

        $this->assertInternalType(
            '{{function.return}}',
            $instance->{{function.name}}{% include 'function.twig' with {'function': function} only %},
            'Return didn\'t match expected type {{function.return}}'
        );
    {% endif %}
    {% if function.return == 'object' %}

        $this->assertInstanceOf(
            '{{function.returnClass}}',
            $instance->{{function.name}}{% include 'function.twig' with {'function': function} only %},
            'Return didn\'t match expected instance {{function.returnClass}}'
        );
    {% endif %}

        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
{% endfor %}
}
