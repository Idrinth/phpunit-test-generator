rules:
  # LOCALHEINZ
  - Localheinz\PHPStan\Rules\Classes\AbstractOrFinalRule
  - Localheinz\PHPStan\Rules\Functions\NoNullableReturnTypeDeclarationRule
  - Localheinz\PHPStan\Rules\Methods\NoNullableReturnTypeDeclarationRule
  # DEPRECATION
  - PHPStan\Rules\Deprecations\AccessDeprecatedPropertyRule
  - PHPStan\Rules\Deprecations\AccessDeprecatedStaticPropertyRule
  - PHPStan\Rules\Deprecations\CallToDeprecatedFunctionRule
  - PHPStan\Rules\Deprecations\CallToDeprecatedMethodRule
  - PHPStan\Rules\Deprecations\CallToDeprecatedStaticMethodRule
  - PHPStan\Rules\Deprecations\FetchingClassConstOfDeprecatedClassRule
  - PHPStan\Rules\Deprecations\ImplementationOfDeprecatedInterfaceRule
  - PHPStan\Rules\Deprecations\InheritanceOfDeprecatedClassRule
  - PHPStan\Rules\Deprecations\InheritanceOfDeprecatedInterfaceRule
  - PHPStan\Rules\Deprecations\InstantiationOfDeprecatedClassRule
  - PHPStan\Rules\Deprecations\UsageOfDeprecatedTraitRule
  # PHPUNIT
  - PHPStan\Rules\PHPUnit\AssertSameBooleanExpectedRule
  - PHPStan\Rules\PHPUnit\AssertSameNullExpectedRule
  - PHPStan\Rules\PHPUnit\AssertSameWithCountRule
  # STRICT RULES
  - PHPStan\Rules\BooleansInConditions\BooleanInBooleanAndRule
  - PHPStan\Rules\BooleansInConditions\BooleanInBooleanNotRule
  - PHPStan\Rules\BooleansInConditions\BooleanInBooleanOrRule
  - PHPStan\Rules\BooleansInConditions\BooleanInElseIfConditionRule
  - PHPStan\Rules\BooleansInConditions\BooleanInIfConditionRule
  - PHPStan\Rules\BooleansInConditions\BooleanInTernaryOperatorRule
  - PHPStan\Rules\Cast\UselessCastRule
  - PHPStan\Rules\DisallowedConstructs\DisallowedEmptyRule
  - PHPStan\Rules\DisallowedConstructs\DisallowedImplicitArrayCreationRule
  - PHPStan\Rules\Functions\MissingFunctionParameterTypehintRule
  - PHPStan\Rules\Functions\MissingFunctionReturnTypehintRule
  - PHPStan\Rules\Methods\MissingMethodParameterTypehintRule
  - PHPStan\Rules\Methods\MissingMethodReturnTypehintRule
  - PHPStan\Rules\Methods\WrongCaseOfInheritedMethodRule
  - PHPStan\Rules\Operators\OperandInArithmeticPostDecrementRule
  - PHPStan\Rules\Operators\OperandInArithmeticPostIncrementRule
  - PHPStan\Rules\Operators\OperandInArithmeticPreDecrementRule
  - PHPStan\Rules\Operators\OperandInArithmeticPreIncrementRule
  - PHPStan\Rules\Operators\OperandsInArithmeticAdditionRule
  - PHPStan\Rules\Operators\OperandsInArithmeticDivisionRule
  - PHPStan\Rules\Operators\OperandsInArithmeticExponentiationRule
  - PHPStan\Rules\Operators\OperandsInArithmeticModuloRule
  - PHPStan\Rules\Operators\OperandsInArithmeticMultiplicationRule
  - PHPStan\Rules\Operators\OperandsInArithmeticSubtractionRule
  - PHPStan\Rules\Properties\MissingPropertyTypehintRule
  - PHPStan\Rules\StrictCalls\DynamicCallOnStaticMethodsRule
  - PHPStan\Rules\StrictCalls\StrictFunctionCallsRule
  - PHPStan\Rules\SwitchConditions\MatchingTypeInSwitchCaseConditionRule
services:
  # PHPUNIT
  - class: PHPStan\PhpDoc\PHPUnit\MockObjectTypeNodeResolverExtension
    tags:
      - phpstan.phpDoc.typeNodeResolverExtension
  - class: PHPStan\Type\PHPUnit\Assert\AssertFunctionTypeSpecifyingExtension
    tags:
      - phpstan.typeSpecifier.functionTypeSpecifyingExtension
  - class: PHPStan\Type\PHPUnit\Assert\AssertMethodTypeSpecifyingExtension
    tags:
      - phpstan.typeSpecifier.methodTypeSpecifyingExtension
  - class: PHPStan\Type\PHPUnit\Assert\AssertStaticMethodTypeSpecifyingExtension
    tags:
      - phpstan.typeSpecifier.staticMethodTypeSpecifyingExtension
  - class: PHPStan\Type\PHPUnit\CreateMockDynamicReturnTypeExtension
    tags:
      - phpstan.broker.dynamicMethodReturnTypeExtension
  - class: PHPStan\Type\PHPUnit\GetMockBuilderDynamicReturnTypeExtension
    tags:
      - phpstan.broker.dynamicMethodReturnTypeExtension
  - class: PHPStan\Type\PHPUnit\MockBuilderDynamicReturnTypeExtension
    tags:
      - phpstan.broker.dynamicMethodReturnTypeExtension
  # STRICT RULES
  - class: PHPStan\Rules\BooleansInConditions\BooleanRuleHelper
  - class: PHPStan\Rules\Operators\OperatorRuleHelper
parameters:
  # STRICT RULES
  polluteScopeWithLoopInitialAssignments: false
  checkAlwaysTrueCheckTypeFunctionCall: true
  checkAlwaysTrueInstanceof: true
  checkAlwaysTrueStrictComparison: true
  checkFunctionNameCase: true
  # PHPUNIT
  earlyTerminatingMethodCalls:
    PHPUnit\Framework\TestCase:
      - fail
      - markTestIncomplete
      - markTestSkipped
  # MANUAL
  ignoreErrors:
